3163.String Compression

Time complexity:O(n)
Space complexity:O(n) //comp

code(c++)
class Solution {
public:
    string compressedString(string word) {
        string comp="";
        char ch=word[0];
        int count=1,n=word.size();
        for(int i=1;i<n;i++){
            if(word[i]==ch && count<9)count++;
            else{
                comp.push_back(count+'0');
                comp.push_back(ch);
                ch=word[i];
                count=1;
            }
            
        }
        comp.push_back(count+'0');
        comp.push_back(ch);
        return comp;   
        
    }
};

                                      EXAMPLE 1:

Input: word = "abcde"

Output: "1a1b1c1d1e"

Explanation:

Initially, comp = "". Apply the operation 5 times, choosing "a", "b", "c", "d", and "e" as the prefix in each operation.

For each prefix, append "1" followed by the character to comp.

                                      EXAMPLE 2:

Input: word = "aaaaaaaaaaaaaabb"

Output: "9a5a2b"

Explanation:

Initially, comp = "". Apply the operation 3 times, choosing "aaaaaaaaa", "aaaaa", and "bb" as the prefix in each operation.

For prefix "aaaaaaaaa", append "9" followed by "a" to comp.
For prefix "aaaaa", append "5" followed by "a" to comp.
For prefix "bb", append "2" followed by "b" to comp.

Firstly, take a empty string 'comp' & their first word is ch, count 1 
          Within loop,it checks if the ch is same as after word and count is less than 9 then count will be incremented
                      else that count & char(ch) will be added to comp & count again to 1.....
    after loop ends, for the last char in word we add it outside of loop.... 
return comp as answer..... 
 
