594.Longest Harmonious Subsequence
           Approach:sliding window

Time complexity:O(n)
Space complexity:O(1)

code:(c++)
class Solution {
public:
    int findLHS(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int left=0,maxi=0;
        for(int right=0;right<nums.size();right++){
            while(nums[right]-nums[left]>1){
                left++;
            }
            if(nums[right]-nums[left]==1){
                maxi=max(maxi,right-left+1);
            }
            
        }
        return maxi;
        
    }
};
Example 1:

Input: nums = [1,3,2,2,5,2,3,7]

Output: 5

Explanation:

The longest harmonious subsequence is [3,2,2,2,3].

   It will go throuh the array with two variables sliding from left to right.... 
   It will return maximum length of the array with the difference between right value to left value exactly 1.....
