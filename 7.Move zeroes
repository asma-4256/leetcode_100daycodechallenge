283.Move zeroes:
time complexity :O(n)

code(c++):
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int n=nums.size();
        int j=0;
        for(int i=1;i<n;i++){
            if(nums[i]!=0&&nums[j]==0){
                swap(nums[i],nums[j]);
                //j++;
                
            }
            if(nums[j]!=0){
                j++;
            }
            
        }
        
    }
};
Input:[1,0,3,0,12,0,4,0]
Output:[1,3,12,5,0,0,0,0]

Here two pointer approach used,where the one "i" is iterates through the values & secong "j" checks if value is 0 or not ,if it is then swap 
i from 1 to n      j from 0 to n // j=i-1;     if there is no 0 in j then it increases... lastly the nums array be arranged as output.
