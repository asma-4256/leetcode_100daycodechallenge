1574.Shortest Subarray to be Removed to make array sorted
         Approach:Two pointer
             Time complexity:O(n)
             Space complexity:O(1)

code(c++):
class Solution {
public:
    int findLengthOfShortestSubarray(vector<int>& arr) {
        int r=arr.size()-1;
        while(r>0 && arr[r]>=arr[r-1]){
            r--;
        }
        int ans=r;
        int l=0;
        while(r>l && (l==0|| arr[l]>=arr[l-1])){
            while(r<arr.size()&&arr[l]>arr[r]){
                r++;
            }
            ans=min(ans,r-l-1);
            l++;
        }
        return ans;
        
    }
};


Algorithm: The problem is starts with finding the prefix ,suffix of the array which is sorted/in the non-decreasing order... & in between the subarray should be removed  
   For that firstly we have to find the sorted suffix and find the sorted prefix of the array if the last element of prefix is greater than first element of the suffix then the right 
    pointer is shifted to right side...
   Returning the answer...after processinggg.... 
